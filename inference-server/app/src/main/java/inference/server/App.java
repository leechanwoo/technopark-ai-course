/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inference.server;

import com.example.HelloServiceGrpc;
import com.example.ThisIsGeneratedJavaServiceGrpc;
import com.example.GrpcTest;
// import io.grpc.ManagedChannel;
// import io.grpc.ManagedChannelBuilder;
// import io.grpc.stub.StreamObserver;
import io.grpc.Server;
import io.grpc.ServerBuilder;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {

        Server server = ServerBuilder.forPort(50051) // Specify the port to listen on
                .addService(new HelloServiceImpl()) // Register your service implementation
                .build();

        try {
            // Start the gRPC server
            server.start();

            System.out.println("Server started and listening on port 50051");

            // Block until the server is shut down
            server.awaitTermination();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }


    static class HelloServiceImpl extends HelloServiceGrpc.HelloServiceImplBase {
        @Override
        public void sayHello(
            GrpcTest.HelloRequest request,
            io.grpc.stub.StreamObserver<GrpcTest.HelloResponse> responseObserver) {
            
            // Implement your server-side logic here
            String message = "Hello, " + request.getName();
            
            // Build and send the response
            GrpcTest.HelloResponse response = GrpcTest.HelloResponse.newBuilder()
                    .setGreeting(message)
                    .build();
            
            responseObserver.onNext(response);
            responseObserver.onCompleted();
        }
    }
}
